/**
 * Created by Johnny on 15/06/2019
 * A coloured triangle is created from a row of colours, each of which is red, green or blue.
 * Successive rows, each containing one fewer colour than the last, are generated by
 * considering the two touching colours in the previous row. If these colours are identical,
 * the same colour is used in the new row. If they are different, the missing colour is used in the new row.
 * This is continued until the final row, with only a single colour, is generated.
 */
public class ColouredTriangles {

    public static void triangle(final String row){

        StringBuilder sb1 = new StringBuilder(row);
        StringBuilder sb2 = new StringBuilder();
        System.out.println(sb1);
        while(sb1.length() > 1) {
            for (int i = 0; i < sb1.length() - 1; i++) {
                if(sb1.charAt(i) == sb1.charAt(i + 1)) {
                    sb2.append(sb1.charAt(i));
                } else if (sb1.charAt(i) == 'R' && sb1.charAt(i + 1) == 'G' ) {
                    sb2.append('B');
                } else if (sb1.charAt(i) == 'R' && sb1.charAt(i + 1) == 'B' ) {
                    sb2.append('G');
                } else if (sb1.charAt(i) == 'B' && sb1.charAt(i + 1) == 'R' ) {
                    sb2.append('G');
                } else if (sb1.charAt(i) == 'B' && sb1.charAt(i + 1) == 'G' ) {
                    sb2.append('R');
                } else if (sb1.charAt(i) == 'G' && sb1.charAt(i + 1) == 'B' ) {
                    sb2.append('R');
                } else if (sb1.charAt(i) == 'G' && sb1.charAt(i + 1) == 'R' ) {
                    sb2.append('B');
                }
            }

            System.out.println(sb2);
            sb1 = sb2;
            sb2 = new StringBuilder();
        }
    }
    public static void main(String[] args) {
        triangle("RRRBBGBR");
        System.out.println();
        triangle("GBBBRRRBGRGBGRR");
    }
}

